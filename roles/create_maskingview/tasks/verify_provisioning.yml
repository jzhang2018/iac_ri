---

# - name: Set unisphere common connection
#   ansible.builtin.set_fact:
#     uni_connection_vars: &uni_connection_vars
#       unispherehost: "{{ unispherehost }}"
#       universion: "{{ universion }}"
#       user: "{{ user }}"
#       password: "{{ password }}"
#       verifycert: "{{ verifycert }}"
#       serial_no: "{{ serial_no }}"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Verify storage group provisioning
# - name: Verify storage group provisioning
#   collections:
#     - dellemc.powermax
#   dellemc.powermax.storagegroup:
#     <<: *uni_connection_vars
#     sg_name: "{{ cluster_name }}_SG"
#     state: 'present'
#   register: verify_sg

# - name: Debug - print out storage group provisionin
#   ansible.builtin.debug:
#     msg: "{{ verify_sg.storage_group_details }}"
#   when: debug_mode | default(false)

# - name: Set storage group verification flag
#   ansible.builtin.set_fact:
#     sg_flag: "{{ true if verify_sg.storage_group_details.num_of_vols > 0 else false }}"

# - name: Debug - sg_flag
#   ansible.builtin.debug:
#     msg: "{{ sg_flag }}"
#   when: debug_mode | default(false)

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Verify port group provisioning
- name: Get portgroup_details
  ansible.builtin.debug:
    msg: "{{ portgroup_details }}"
  when: debug_mode | default(false)

- name: Set port group verification flag
  ansible.builtin.set_fact:
    pg_flag: "{{ true if (portgroup_details.portGroupId == cluster_name + '_PG' and portgroup_details.num_of_ports > 0) else false }}"

- name: Debug - pg_flag
  ansible.builtin.debug:
    msg: "{{ pg_flag }}"
  when: debug_mode | default(false)

# TODO - Verify host group provisioning
