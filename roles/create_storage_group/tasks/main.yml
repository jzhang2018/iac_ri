---
# tasks file for create_storage_group
# workflow: user provides storage group name and the count of volumes -> create empty storgare group
#   -> create volumes based on the naming convention and the count requested
#   -> add newly created volumes to the storage group

- name: Set unisphere common connection
  ansible.builtin.set_fact:
    uni_connection_vars: &uni_connection_vars
      unispherehost: "{{ unispherehost }}"
      universion: "{{ universion }}"
      user: "{{ user }}"
      password: "{{ password }}"
      verifycert: "{{ verifycert }}"
      serial_no: "{{ serial_no }}"

- name: Create empty storage group
  collections:
    - dellemc.powermax
  dellemc.powermax.storagegroup:
    <<: *uni_connection_vars
    sg_name: "{{ sg_name }}"
    # service_level: "Diamond"
    # srp: "SRP_1"
    # compression: true
    state: "present"

- name: Create volumes for newly created storage group
  collections:
    - dellemc.powermax
  dellemc.powermax.volume:
    <<: *uni_connection_vars
    vol_name: "{{ (sg_name | split('_'))[0] + '_DATA.' }}{{ item }}"
    sg_name: "{{ sg_name }}"  # Storage group name should be along with volume name
    size: 1
    cap_unit: "GB"
    state: 'present'
  loop: "{{ range(0, volume_count, 1) | list }}" # 0, 1, 2

- name: Get newly created storage group details including volumes
  dellemc.powermax.storagegroup:
    <<: *uni_connection_vars
    sg_name: "{{ sg_name }}"
    state: "present"
  register: sg

- name: Print out newly created storage group details including volumes
  ansible.builtin.debug:
    msg: "{{ sg }}"
  when: debug_mode | default(false)
